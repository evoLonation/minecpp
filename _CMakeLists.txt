cmake_minimum_required(VERSION 3.0.0)
project(minecpp VERSION 0.1.0)


# 设置 头文件 目录
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
# include_directories(${CMAKE_CURRENT_SOURCE_DIR}/imgui)

# 设置 编译文件 目录
set ( SOURCES )
# 如果要通过通配符获取文件，必须使用下面的命令
# GLOB表示使用文件的模式匹配
file ( GLOB sub_files "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp" )
list ( APPEND SOURCES ${sub_files} )
# 如果要添加单个文件，直接使用下面的命令
# list ( APPEND SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp )

# 设置 库文件 目录
set(LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib)
link_directories(${LIB_DIR})

# 设置 c++ 版本
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 编译
add_executable(minecpp ${SOURCES})

# 设置所有静态库
set(LIBRARY glfw3 gl gdi32 fmtd imgui stbimage assimp.dll)

# 链接
target_link_libraries(minecpp ${LIBRARY})

# 将动态库复制到二进制文件目录下
add_custom_command(
    TARGET minecpp POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy
            "${CMAKE_SOURCE_DIR}/dll/libassimp-5.dll"
            "${CMAKE_CURRENT_BINARY_DIR}/libassimp-5.dll"
)

# 开启测试
enable_testing()

set(TEST ztest)

# 构建测试程序
set ( SOURCES_TEST )
file ( GLOB sub_files "${CMAKE_CURRENT_SOURCE_DIR}/test/*d:\mycodes\c++\module-test\xmake.lua.cpp" )
list ( APPEND SOURCES_TEST ${sub_files} )

add_executable(${TEST} ${SOURCES_TEST})

set(LIBRARY_TEST ${LIBRARY} gtest_main gtest)

target_link_libraries(${TEST}  ${LIBRARY_TEST})

# 添加测试
add_test(
    NAME ${TEST}
    COMMAND ${TEST}
)